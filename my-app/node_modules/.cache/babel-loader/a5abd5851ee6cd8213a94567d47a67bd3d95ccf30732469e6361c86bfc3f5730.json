{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dropbox\\\\PC (4)\\\\Documents\\\\GitHub\\\\STM32-Bluetooth-Communication\\\\my-app\\\\src\\\\components\\\\OpenAIAPI.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextServiceClient } from '@google-ai/generativelanguage';\nimport { GoogleAuth } from 'google-auth-library';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextGenerator = () => {\n  _s();\n  const [generatedText, setGeneratedText] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const MODEL_NAME = \"models/text-bison-001\";\n    const API_KEY = process.env.API_KEY; // Make sure to set your API key in environment variables\n\n    const client = new TextServiceClient({\n      authClient: new GoogleAuth().fromAPIKey(API_KEY)\n    });\n    const prompt = \"Repeat after me: one, two,\";\n    client.generateText({\n      model: MODEL_NAME,\n      prompt: {\n        text: prompt\n      }\n    }).then(result => {\n      setGeneratedText(JSON.stringify(result, null, 2));\n    }).catch(err => {\n      setError(err.message);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [generatedText && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Generated Text: \", generatedText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(TextGenerator, \"fofgpFGDBXPIhQt5GyorbZy13/o=\");\n_c = TextGenerator;\nexport default TextGenerator;\nvar _c;\n$RefreshReg$(_c, \"TextGenerator\");","map":{"version":3,"names":["React","useState","useEffect","TextServiceClient","GoogleAuth","jsxDEV","_jsxDEV","TextGenerator","_s","generatedText","setGeneratedText","error","setError","MODEL_NAME","API_KEY","process","env","client","authClient","fromAPIKey","prompt","generateText","model","text","then","result","JSON","stringify","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Dropbox/PC (4)/Documents/GitHub/STM32-Bluetooth-Communication/my-app/src/components/OpenAIAPI.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextServiceClient } from '@google-ai/generativelanguage';\r\nimport { GoogleAuth } from 'google-auth-library';\r\n\r\nconst TextGenerator: React.FC = () => {\r\n  const [generatedText, setGeneratedText] = useState<string | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const MODEL_NAME = \"models/text-bison-001\";\r\n    const API_KEY = process.env.API_KEY; // Make sure to set your API key in environment variables\r\n\r\n    const client = new TextServiceClient({\r\n      authClient: new GoogleAuth().fromAPIKey(API_KEY),\r\n    });\r\n\r\n    const prompt = \"Repeat after me: one, two,\";\r\n\r\n    client.generateText({\r\n      model: MODEL_NAME,\r\n      prompt: {\r\n        text: prompt,\r\n      },\r\n    })\r\n    .then((result) => {\r\n      setGeneratedText(JSON.stringify(result, null, 2));\r\n    })\r\n    .catch((err) => {\r\n      setError(err.message);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {generatedText && <div>Generated Text: {generatedText}</div>}\r\n      {error && <div>Error: {error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextGenerator;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,UAAU,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EACvE,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,uBAAuB;IAC1C,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC,CAAC;;IAErC,MAAMG,MAAM,GAAG,IAAId,iBAAiB,CAAC;MACnCe,UAAU,EAAE,IAAId,UAAU,CAAC,CAAC,CAACe,UAAU,CAACL,OAAO;IACjD,CAAC,CAAC;IAEF,MAAMM,MAAM,GAAG,4BAA4B;IAE3CH,MAAM,CAACI,YAAY,CAAC;MAClBC,KAAK,EAAET,UAAU;MACjBO,MAAM,EAAE;QACNG,IAAI,EAAEH;MACR;IACF,CAAC,CAAC,CACDI,IAAI,CAAEC,MAAM,IAAK;MAChBf,gBAAgB,CAACgB,IAAI,CAACC,SAAS,CAACF,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAK;MACdjB,QAAQ,CAACiB,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExB,OAAA;IAAAyB,QAAA,GACGtB,aAAa,iBAAIH,OAAA;MAAAyB,QAAA,GAAK,kBAAgB,EAACtB,aAAa;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC3DxB,KAAK,iBAAIL,OAAA;MAAAyB,QAAA,GAAK,SAAO,EAACpB,KAAK;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAlCID,aAAuB;AAAA6B,EAAA,GAAvB7B,aAAuB;AAoC7B,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}