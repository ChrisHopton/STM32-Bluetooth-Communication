{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Dropbox\\\\PC\\\\Documents\\\\GitHub\\\\STM32-Bluetooth-Communication\\\\my-app\\\\src\\\\components\\\\gyroscopePlot.tsx\";\nimport React from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { Points, PointMaterial } from '@react-three/drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GyroscopePlot = ({\n  data\n}) => {\n  // data is an array of { x, y, z } objects\n\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Points, {\n      children: data.map((point, index) => /*#__PURE__*/_jsxDEV(\"points\", {\n        children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n          attach: \"geometry\",\n          children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n            attachObject: ['attributes', 'position'],\n            count: 1,\n            array: new Float32Array([point.x, point.y, point.z]),\n            itemSize: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(PointMaterial, {\n          color: 'orange',\n          size: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = GyroscopePlot;\nexport default GyroscopePlot;\nvar _c;\n$RefreshReg$(_c, \"GyroscopePlot\");","map":{"version":3,"names":["React","Canvas","Points","PointMaterial","jsxDEV","_jsxDEV","GyroscopePlot","data","children","intensity","fileName","_jsxFileName","lineNumber","columnNumber","position","map","point","index","attach","attachObject","count","array","Float32Array","x","y","z","itemSize","color","size","_c","$RefreshReg$"],"sources":["C:/Users/mathe/Dropbox/PC/Documents/GitHub/STM32-Bluetooth-Communication/my-app/src/components/gyroscopePlot.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { Points, PointMaterial } from '@react-three/drei';\r\n\r\nconst GyroscopePlot = ({ data }) => {\r\n    // data is an array of { x, y, z } objects\r\n\r\n    return (\r\n        <Canvas>\r\n            <ambientLight intensity={0.5} />\r\n            <pointLight position={[10, 10, 10]} />\r\n            <Points>\r\n                {data.map((point, index) => (\r\n                    <points key={index}>\r\n                        <bufferGeometry attach=\"geometry\">\r\n                            <bufferAttribute \r\n                                attachObject={['attributes', 'position']}\r\n                                count={1}\r\n                                array={new Float32Array([point.x, point.y, point.z])}\r\n                                itemSize={3}\r\n                            />\r\n                        </bufferGeometry>\r\n                        <PointMaterial color={'orange'} size={0.5} />\r\n                    </points>\r\n                ))}\r\n            </Points>\r\n        </Canvas>\r\n    );\r\n};\r\n\r\nexport default GyroscopePlot;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,MAAM,EAAEC,aAAa,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChC;;EAEA,oBACIF,OAAA,CAACJ,MAAM;IAAAO,QAAA,gBACHH,OAAA;MAAcI,SAAS,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCR,OAAA;MAAYS,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCR,OAAA,CAACH,MAAM;MAAAM,QAAA,EACFD,IAAI,CAACQ,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACnBZ,OAAA;QAAAG,QAAA,gBACIH,OAAA;UAAgBa,MAAM,EAAC,UAAU;UAAAV,QAAA,eAC7BH,OAAA;YACIc,YAAY,EAAE,CAAC,YAAY,EAAE,UAAU,CAAE;YACzCC,KAAK,EAAE,CAAE;YACTC,KAAK,EAAE,IAAIC,YAAY,CAAC,CAACN,KAAK,CAACO,CAAC,EAAEP,KAAK,CAACQ,CAAC,EAAER,KAAK,CAACS,CAAC,CAAC,CAAE;YACrDC,QAAQ,EAAE;UAAE;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACU,CAAC,eACjBR,OAAA,CAACF,aAAa;UAACwB,KAAK,EAAE,QAAS;UAACC,IAAI,EAAE;QAAI;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GATpCI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUV,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB,CAAC;AAACgB,EAAA,GAxBIvB,aAAa;AA0BnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}