{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dropbox\\\\PC (4)\\\\Documents\\\\GitHub\\\\STM32-Bluetooth-Communication\\\\my-app\\\\src\\\\components\\\\OpenAIAPI.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const sendMessage = () => {\n    const updatedMessages = [...messages, {\n      content: inputText\n    }];\n    fetch('http://localhost:3001/generate-message', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        messages: updatedMessages\n      })\n    }).then(response => response.json()).then(data => {\n      setMessages([...updatedMessages, {\n        content: data.content\n      }]);\n      setInputText('');\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputText,\n      onChange: e => setInputText(e.target.value),\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"XjzYOZb5NzW+E6XGKBVKwRlePKo=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatComponent","_s","messages","setMessages","inputText","setInputText","sendMessage","updatedMessages","content","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","console","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","onClick","_c","$RefreshReg$"],"sources":["C:/Dropbox/PC (4)/Documents/GitHub/STM32-Bluetooth-Communication/my-app/src/components/OpenAIAPI.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ChatComponent = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n\r\n  const sendMessage = () => {\r\n    const updatedMessages = [...messages, { content: inputText }];\r\n    fetch('http://localhost:3001/generate-message', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ messages: updatedMessages }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setMessages([...updatedMessages, { content: data.content }]);\r\n        setInputText('');\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <p key={index}>{msg.content}</p>\r\n        ))}\r\n      </div>\r\n      <input\r\n        value={inputText}\r\n        onChange={e => setInputText(e.target.value)}\r\n        type=\"text\"\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,eAAe,GAAG,CAAC,GAAGL,QAAQ,EAAE;MAAEM,OAAO,EAAEJ;IAAU,CAAC,CAAC;IAC7DK,KAAK,CAAC,wCAAwC,EAAE;MAC9CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,QAAQ,EAAEK;MAAgB,CAAC;IACpD,CAAC,CAAC,CACCQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZf,WAAW,CAAC,CAAC,GAAGI,eAAe,EAAE;QAAEC,OAAO,EAAEU,IAAI,CAACV;MAAQ,CAAC,CAAC,CAAC;MAC5DH,YAAY,CAAC,EAAE,CAAC;IAClB,CAAC,CAAC,CACDc,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EAED,oBACErB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EACGpB,QAAQ,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB1B,OAAA;QAAAuB,QAAA,EAAgBE,GAAG,CAAChB;MAAO,GAAnBiB,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN9B,OAAA;MACE+B,KAAK,EAAE1B,SAAU;MACjB2B,QAAQ,EAAEC,CAAC,IAAI3B,YAAY,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,IAAI,EAAC;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACF9B,OAAA;MAAQoC,OAAO,EAAE7B,WAAY;MAAAgB,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAtCID,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAwCnB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}