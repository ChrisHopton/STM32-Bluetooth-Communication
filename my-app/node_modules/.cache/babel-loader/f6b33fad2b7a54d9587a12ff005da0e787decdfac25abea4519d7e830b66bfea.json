{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const BluetoothComponent=()=>{const[connectedDevice,setConnectedDevice]=useState(null);const[dataCharacteristic,setDataCharacteristic]=useState(null);const[inputData,setInputData]=useState('');const[messages,setMessages]=useState([]);const log=message=>{setMessages(prevMessages=>[...prevMessages,message]);};const handleConnectClick=()=>{navigator.bluetooth.requestDevice({acceptAllDevices:true,optionalServices:['0000ffe0-0000-1000-8000-00805f9b34fb']}).then(device=>{log(\"Connecting to \".concat(device.name,\"...\"));setConnectedDevice(device);return device.gatt.connect();}).then(server=>server.getPrimaryService('0000ffe0-0000-1000-8000-00805f9b34fb')).then(service=>service.getCharacteristic('0000ffe1-0000-1000-8000-00805f9b34fb')).then(characteristic=>{log('Connected. Ready to send and receive data.');setDataCharacteristic(characteristic);characteristic.addEventListener('characteristicvaluechanged',handleCharacteristicValueChanged);return characteristic.startNotifications();}).then(()=>{log('Notifications started');//dataCharacteristic?.addEventListener('characteristicvaluechanged', handleCharacteristicValueChanged);\n}).catch(error=>{log('Error: '+error);});};const handleCharacteristicValueChanged=event=>{const target=event.target;const value=target.value;let decoder=new TextDecoder('utf-8');let message='';for(let i=0;i<value.byteLength;i++){message+=String.fromCharCode(value.getUint8(i));}log('Received: '+message);};const handleSendClick=()=>{let dataToSend=inputData+'\\r\\n';const data=new TextEncoder().encode(dataToSend);if(dataCharacteristic){const method=dataCharacteristic.properties.writeWithoutResponse?'writeValueWithoutResponse':'writeValue';setTimeout(()=>{dataCharacteristic[method](data).then(()=>{log('Data sent: '+dataToSend);}).catch(error=>{log('Send Error: '+error);});},100);}else{log('Characteristic not found.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-2\",onClick:handleConnectClick,children:\"Connect\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"border border-gray-400 p-2 rounded mb-2\",value:inputData,onChange:e=>setInputData(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\",onClick:handleSendClick,children:\"Send Data\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 border border-gray-300 p-4 h-64 overflow-auto\",children:messages.map((msg,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"mb-2\",children:msg},index))})]});};export default BluetoothComponent;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","BluetoothComponent","connectedDevice","setConnectedDevice","dataCharacteristic","setDataCharacteristic","inputData","setInputData","messages","setMessages","log","message","prevMessages","handleConnectClick","navigator","bluetooth","requestDevice","acceptAllDevices","optionalServices","then","device","concat","name","gatt","connect","server","getPrimaryService","service","getCharacteristic","characteristic","addEventListener","handleCharacteristicValueChanged","startNotifications","catch","error","event","target","value","decoder","TextDecoder","i","byteLength","String","fromCharCode","getUint8","handleSendClick","dataToSend","data","TextEncoder","encode","method","properties","writeWithoutResponse","setTimeout","className","children","onClick","type","onChange","e","map","msg","index"],"sources":["C:/Users/mathe/Dropbox/PC/Documents/GitHub/STM32-Bluetooth-Communication/my-app/src/components/BluetoothComponent.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst BluetoothComponent = () => {\r\n  const [connectedDevice, setConnectedDevice] = useState<BluetoothDevice | null>(null);\r\n  const [dataCharacteristic, setDataCharacteristic] = useState<BluetoothRemoteGATTCharacteristic | null>(null);\r\n  const [inputData, setInputData] = useState('');\r\n  const [messages, setMessages] = useState<string[]>([]);\r\n\r\n  const log = (message: string) => {\r\n    setMessages(prevMessages => [...prevMessages, message]);\r\n  };\r\n\r\n  const handleConnectClick = () => {\r\n    navigator.bluetooth.requestDevice({\r\n      acceptAllDevices: true,\r\n      optionalServices: ['0000ffe0-0000-1000-8000-00805f9b34fb']\r\n    })\r\n    .then(device => {\r\n      log(`Connecting to ${device.name}...`);\r\n      setConnectedDevice(device);\r\n      return device.gatt.connect();\r\n    })\r\n    .then(server => server.getPrimaryService('0000ffe0-0000-1000-8000-00805f9b34fb'))\r\n    .then(service => service.getCharacteristic('0000ffe1-0000-1000-8000-00805f9b34fb'))\r\n    .then(characteristic => {\r\n      log('Connected. Ready to send and receive data.');\r\n      setDataCharacteristic(characteristic);\r\n      characteristic.addEventListener('characteristicvaluechanged', handleCharacteristicValueChanged);\r\n      return characteristic.startNotifications();\r\n    })\r\n    .then(() => {\r\n      log('Notifications started');\r\n      //dataCharacteristic?.addEventListener('characteristicvaluechanged', handleCharacteristicValueChanged);\r\n    })\r\n    .catch(error => {\r\n      log('Error: ' + error);\r\n    });\r\n  };\r\n\r\n  const handleCharacteristicValueChanged = (event: Event) => {\r\n    const target = event.target as BluetoothRemoteGATTCharacteristic;\r\n    const value = target.value;\r\n    let decoder = new TextDecoder('utf-8');\r\n    let message = '';\r\n\r\n    for (let i = 0; i < value.byteLength; i++) {\r\n      message += String.fromCharCode(value.getUint8(i));\r\n    }\r\n\r\n    log('Received: ' + message);\r\n  };\r\n\r\n  const handleSendClick = () => {\r\n    let dataToSend = inputData + '\\r\\n';\r\n    const data = new TextEncoder().encode(dataToSend);\r\n\r\n    if (dataCharacteristic) {\r\n      const method = dataCharacteristic.properties.writeWithoutResponse ? 'writeValueWithoutResponse' : 'writeValue';\r\n\r\n      setTimeout(() => {\r\n        dataCharacteristic[method](data)\r\n        .then(() => {\r\n          log('Data sent: ' + dataToSend);\r\n        })\r\n        .catch(error => {\r\n          log('Send Error: ' + error);\r\n        });\r\n      }, 100);\r\n    } else {\r\n      log('Characteristic not found.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-2\" onClick={handleConnectClick}>Connect</button>\r\n      <input \r\n        type=\"text\" \r\n        className=\"border border-gray-400 p-2 rounded mb-2\" \r\n        value={inputData} \r\n        onChange={(e) => setInputData(e.target.value)} \r\n      />\r\n      <button className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\" onClick={handleSendClick}>Send Data</button>\r\n\r\n      <div className=\"mt-4 border border-gray-300 p-4 h-64 overflow-auto\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className=\"mb-2\">{msg}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BluetoothComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}