{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport OpenAI from 'openai';\nconst useOpenAI = () => {\n  _s();\n  const [aiResponse, setAIResponse] = useState(null);\n  useEffect(() => {\n    const openai = new OpenAI({\n      apiKey: process.env.REACT_APP_OPENAI_API_KEY\n    });\n    const fetchData = async () => {\n      try {\n        const completion = await openai.chat.completions.create({\n          messages: [{\n            role: 'system',\n            content: 'You are a helpful assistant.'\n          }],\n          model: 'gpt-3.5-turbo'\n        });\n        setAIResponse(completion.choices[0]);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return aiResponse;\n};\n_s(useOpenAI, \"qyLKsd4PlsV++39DniSXNmVEL5M=\");\nexport default useOpenAI;","map":{"version":3,"names":["useEffect","useState","OpenAI","useOpenAI","_s","aiResponse","setAIResponse","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","fetchData","completion","chat","completions","create","messages","role","content","model","choices","error","console"],"sources":["C:/Users/mathe/Dropbox/PC/Documents/GitHub/STM32-Bluetooth-Communication/my-app/src/components/OpenAIAPI.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport OpenAI from 'openai';\r\n\r\nconst useOpenAI = () => {\r\n  const [aiResponse, setAIResponse] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const openai = new OpenAI({ apiKey: process.env.REACT_APP_OPENAI_API_KEY });\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const completion = await openai.chat.completions.create({\r\n          messages: [{ role: 'system', content: 'You are a helpful assistant.' }],\r\n          model: 'gpt-3.5-turbo',\r\n        });\r\n\r\n        setAIResponse(completion.choices[0]);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return aiResponse;\r\n};\r\n\r\nexport default useOpenAI;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,QAAQ;AAE3B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMO,MAAM,GAAG,IAAIL,MAAM,CAAC;MAAEM,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC;IAAyB,CAAC,CAAC;IAE3E,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,UAAU,GAAG,MAAMN,MAAM,CAACO,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC;UACtDC,QAAQ,EAAE,CAAC;YAAEC,IAAI,EAAE,QAAQ;YAAEC,OAAO,EAAE;UAA+B,CAAC,CAAC;UACvEC,KAAK,EAAE;QACT,CAAC,CAAC;QAEFd,aAAa,CAACO,UAAU,CAACQ,OAAO,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDV,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOP,UAAU;AACnB,CAAC;AAACD,EAAA,CAvBID,SAAS;AAyBf,eAAeA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}