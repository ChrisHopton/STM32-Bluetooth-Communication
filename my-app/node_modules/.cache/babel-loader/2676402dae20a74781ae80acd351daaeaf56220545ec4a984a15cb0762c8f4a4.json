{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Dropbox\\\\PC\\\\Documents\\\\GitHub\\\\STM32-Bluetooth-Communication\\\\my-app\\\\src\\\\components\\\\gyroscopePlot.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GyroscopePlot = ({\n  data\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0xffffff, 1); // Set background color to white\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Add Grid Helper for X, Y, Z axes\n    const size = 10;\n    const divisions = 10;\n    const gridHelper = new THREE.GridHelper(size, divisions);\n    scene.add(gridHelper);\n\n    // Convert gyroscope data to points\n    const points = data.map(d => new THREE.Vector3(d.x, d.y, d.z));\n    const geometry = new THREE.BufferGeometry().setFromPoints(points);\n    const material = new THREE.LineBasicMaterial({\n      color: 0x0000ff\n    });\n    const line = new THREE.Line(geometry, material);\n    scene.add(line);\n    camera.position.z = 5;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Clean up\n    return () => {\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n};\n_s(GyroscopePlot, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = GyroscopePlot;\nexport default GyroscopePlot;\nvar _c;\n$RefreshReg$(_c, \"GyroscopePlot\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","GyroscopePlot","data","_s","mountRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setSize","setClearColor","current","appendChild","domElement","size","divisions","gridHelper","GridHelper","add","points","map","d","Vector3","x","y","z","geometry","BufferGeometry","setFromPoints","material","LineBasicMaterial","color","line","Line","position","animate","requestAnimationFrame","render","removeChild","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mathe/Dropbox/PC/Documents/GitHub/STM32-Bluetooth-Communication/my-app/src/components/gyroscopePlot.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst GyroscopePlot = ({ data }) => {\r\n    const mountRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const scene = new THREE.Scene();\r\n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n        const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        renderer.setClearColor(0xffffff, 1); // Set background color to white\r\n        mountRef.current.appendChild(renderer.domElement);\r\n\r\n        // Add Grid Helper for X, Y, Z axes\r\n        const size = 10;\r\n        const divisions = 10;\r\n        const gridHelper = new THREE.GridHelper(size, divisions);\r\n        scene.add(gridHelper);\r\n\r\n        // Convert gyroscope data to points\r\n        const points = data.map(d => new THREE.Vector3(d.x, d.y, d.z));\r\n        const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n        const material = new THREE.LineBasicMaterial({ color: 0x0000ff });\r\n        const line = new THREE.Line(geometry, material);\r\n\r\n        scene.add(line);\r\n\r\n        camera.position.z = 5;\r\n\r\n        const animate = () => {\r\n            requestAnimationFrame(animate);\r\n            renderer.render(scene, camera);\r\n        };\r\n\r\n        animate();\r\n\r\n        // Clean up\r\n        return () => {\r\n            mountRef.current.removeChild(renderer.domElement);\r\n        };\r\n    }, [data]);\r\n\r\n    return <div ref={mountRef} style={{ width: '100%', height: '100%' }} />;\r\n};\r\n\r\nexport default GyroscopePlot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACZ,MAAMS,KAAK,GAAG,IAAIP,KAAK,CAACQ,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIT,KAAK,CAACU,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjG,MAAMC,QAAQ,GAAG,IAAId,KAAK,CAACe,aAAa,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAE7DF,QAAQ,CAACG,OAAO,CAACN,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDC,QAAQ,CAACI,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IACrCZ,QAAQ,CAACa,OAAO,CAACC,WAAW,CAACN,QAAQ,CAACO,UAAU,CAAC;;IAEjD;IACA,MAAMC,IAAI,GAAG,EAAE;IACf,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,UAAU,GAAG,IAAIxB,KAAK,CAACyB,UAAU,CAACH,IAAI,EAAEC,SAAS,CAAC;IACxDhB,KAAK,CAACmB,GAAG,CAACF,UAAU,CAAC;;IAErB;IACA,MAAMG,MAAM,GAAGvB,IAAI,CAACwB,GAAG,CAACC,CAAC,IAAI,IAAI7B,KAAK,CAAC8B,OAAO,CAACD,CAAC,CAACE,CAAC,EAAEF,CAAC,CAACG,CAAC,EAAEH,CAAC,CAACI,CAAC,CAAC,CAAC;IAC9D,MAAMC,QAAQ,GAAG,IAAIlC,KAAK,CAACmC,cAAc,CAAC,CAAC,CAACC,aAAa,CAACT,MAAM,CAAC;IACjE,MAAMU,QAAQ,GAAG,IAAIrC,KAAK,CAACsC,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;IACjE,MAAMC,IAAI,GAAG,IAAIxC,KAAK,CAACyC,IAAI,CAACP,QAAQ,EAAEG,QAAQ,CAAC;IAE/C9B,KAAK,CAACmB,GAAG,CAACc,IAAI,CAAC;IAEf/B,MAAM,CAACiC,QAAQ,CAACT,CAAC,GAAG,CAAC;IAErB,MAAMU,OAAO,GAAGA,CAAA,KAAM;MAClBC,qBAAqB,CAACD,OAAO,CAAC;MAC9B7B,QAAQ,CAAC+B,MAAM,CAACtC,KAAK,EAAEE,MAAM,CAAC;IAClC,CAAC;IAEDkC,OAAO,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MACTrC,QAAQ,CAACa,OAAO,CAAC2B,WAAW,CAAChC,QAAQ,CAACO,UAAU,CAAC;IACrD,CAAC;EACL,CAAC,EAAE,CAACjB,IAAI,CAAC,CAAC;EAEV,oBAAOF,OAAA;IAAK6C,GAAG,EAAEzC,QAAS;IAAC0C,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3E,CAAC;AAACjD,EAAA,CA1CIF,aAAa;AAAAoD,EAAA,GAAbpD,aAAa;AA4CnB,eAAeA,aAAa;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}