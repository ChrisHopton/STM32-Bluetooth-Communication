{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dropbox\\\\PC (4)\\\\Documents\\\\GitHub\\\\STM32-Bluetooth-Communication\\\\my-app\\\\src\\\\components\\\\ChatRoom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [useChatModel, setUseChatModel] = useState(true); // State to toggle between models\n\n  const sendMessage = () => {\n    if (!inputText.trim()) return;\n    const newMessage = {\n      content: inputText,\n      sender: 'user'\n    };\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n\n    // Choosing the correct endpoint\n    const endpoint = useChatModel ? 'http://localhost:3001/chat-generate-message' : 'http://localhost:3001/data-generate-message';\n    fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt: inputText\n      })\n    }).then(response => response.json()).then(data => {\n      setMessages(prev => [...prev, {\n        content: data.message || data.content,\n        sender: 'api'\n      }]);\n      setInputText('');\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.sender === 'user' ? 'user-message' : 'api-message',\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputText,\n      onChange: e => setInputText(e.target.value),\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"4xpwiFSnv/uKvcKCx6k9XU+CWAA=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","ReactMarkdown","jsxDEV","_jsxDEV","ChatComponent","_s","messages","setMessages","inputText","setInputText","useChatModel","setUseChatModel","sendMessage","trim","newMessage","content","sender","prevMessages","endpoint","fetch","method","headers","body","JSON","stringify","prompt","then","response","json","data","prev","message","catch","error","console","children","map","msg","index","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","onClick","_c","$RefreshReg$"],"sources":["C:/Dropbox/PC (4)/Documents/GitHub/STM32-Bluetooth-Communication/my-app/src/components/ChatRoom.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst ChatComponent: React.FC = () => {\r\n  const [messages, setMessages] = useState<{ content: string, sender: 'user' | 'api' }[]>([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [useChatModel, setUseChatModel] = useState(true); // State to toggle between models\r\n\r\n  const sendMessage = () => {\r\n    if (!inputText.trim()) return;\r\n\r\n    const newMessage = { content: inputText, sender: 'user' };\r\n    setMessages(prevMessages => [...prevMessages, newMessage]);\r\n\r\n    // Choosing the correct endpoint\r\n    const endpoint = useChatModel ? 'http://localhost:3001/chat-generate-message' : 'http://localhost:3001/data-generate-message';\r\n\r\n    fetch(endpoint, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ prompt: inputText }),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setMessages(prev => [...prev, { content: data.message || data.content, sender: 'api' }]);\r\n      setInputText('');\r\n    })\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n    });\r\n};\r\n\r\n\r\nreturn (\r\n    <div>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={msg.sender === 'user' ? 'user-message' : 'api-message'}>\r\n            {/* Render the message content as Markdown */}\r\n            <ReactMarkdown>{msg.content}</ReactMarkdown>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        value={inputText}\r\n        onChange={e => setInputText(e.target.value)}\r\n        type=\"text\"\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}