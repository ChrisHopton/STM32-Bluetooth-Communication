{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dropbox\\\\PC (4)\\\\Documents\\\\GitHub\\\\STM32-Bluetooth-Communication\\\\my-app\\\\src\\\\components\\\\BluetoothComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BluetoothComponent = () => {\n  _s();\n  const [connectedDevice, setConnectedDevice] = useState(null);\n  const [dataCharacteristic, setDataCharacteristic] = useState(null);\n  const [inputData, setInputData] = useState('');\n  const [messages, setMessages] = useState([]);\n  const log = message => {\n    setMessages(prevMessages => [...prevMessages, message]);\n  };\n  const handleConnectClick = () => {\n    navigator.bluetooth.requestDevice({\n      acceptAllDevices: true,\n      optionalServices: ['0000ffe0-0000-1000-8000-00805f9b34fb']\n    }).then(device => {\n      log(`Connecting to ${device.name}...`);\n      setConnectedDevice(device);\n      return device.gatt.connect();\n    }).then(server => server.getPrimaryService('0000ffe0-0000-1000-8000-00805f9b34fb')).then(service => service.getCharacteristic('0000ffe1-0000-1000-8000-00805f9b34fb')).then(characteristic => {\n      log('Connected. Ready to send and receive data.');\n      setDataCharacteristic(characteristic);\n      characteristic.addEventListener('characteristicvaluechanged', handleCharacteristicValueChanged);\n      return characteristic.startNotifications();\n    }).then(() => {\n      log('Notifications started');\n      //dataCharacteristic?.addEventListener('characteristicvaluechanged', handleCharacteristicValueChanged);\n    }).catch(error => {\n      log('Error: ' + error);\n    });\n  };\n  const handleCharacteristicValueChanged = event => {\n    const target = event.target;\n    const value = target.value;\n    let decoder = new TextDecoder('utf-8');\n    let message = '';\n    for (let i = 0; i < value.byteLength; i++) {\n      message += String.fromCharCode(value.getUint8(i));\n    }\n    log('Received: ' + message);\n  };\n  const handleSendClick = () => {\n    let dataToSend = inputData + '\\r\\n';\n    const data = new TextEncoder().encode(dataToSend);\n    if (dataCharacteristic) {\n      const method = dataCharacteristic.properties.writeWithoutResponse ? 'writeValueWithoutResponse' : 'writeValue';\n      setTimeout(() => {\n        dataCharacteristic[method](data).then(() => {\n          log('Data sent: ' + dataToSend);\n        }).catch(error => {\n          log('Send Error: ' + error);\n        });\n      }, 100);\n    } else {\n      log('Characteristic not found.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-2\",\n      onClick: handleConnectClick,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"border border-gray-400 p-2 rounded mb-2\",\n      value: inputData,\n      onChange: e => setInputData(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\",\n      onClick: handleSendClick,\n      children: \"Send Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 border border-gray-300 p-4 h-64 overflow-auto\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(BluetoothComponent, \"qHZgs515qK6OZ3yFtuHuDSYvCcM=\");\n_c = BluetoothComponent;\nexport default BluetoothComponent;\nvar _c;\n$RefreshReg$(_c, \"BluetoothComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BluetoothComponent","_s","connectedDevice","setConnectedDevice","dataCharacteristic","setDataCharacteristic","inputData","setInputData","messages","setMessages","log","message","prevMessages","handleConnectClick","navigator","bluetooth","requestDevice","acceptAllDevices","optionalServices","then","device","name","gatt","connect","server","getPrimaryService","service","getCharacteristic","characteristic","addEventListener","handleCharacteristicValueChanged","startNotifications","catch","error","event","target","value","decoder","TextDecoder","i","byteLength","String","fromCharCode","getUint8","handleSendClick","dataToSend","data","TextEncoder","encode","method","properties","writeWithoutResponse","setTimeout","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","map","msg","index","_c","$RefreshReg$"],"sources":["C:/Dropbox/PC (4)/Documents/GitHub/STM32-Bluetooth-Communication/my-app/src/components/BluetoothComponent.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst BluetoothComponent = () => {\r\n  const [connectedDevice, setConnectedDevice] = useState<BluetoothDevice | null>(null);\r\n  const [dataCharacteristic, setDataCharacteristic] = useState<BluetoothRemoteGATTCharacteristic | null>(null);\r\n  const [inputData, setInputData] = useState('');\r\n  const [messages, setMessages] = useState<string[]>([]);\r\n\r\n  const log = (message: string) => {\r\n    setMessages(prevMessages => [...prevMessages, message]);\r\n  };\r\n\r\n  const handleConnectClick = () => {\r\n    navigator.bluetooth.requestDevice({\r\n      acceptAllDevices: true,\r\n      optionalServices: ['0000ffe0-0000-1000-8000-00805f9b34fb']\r\n    })\r\n    .then(device => {\r\n      log(`Connecting to ${device.name}...`);\r\n      setConnectedDevice(device);\r\n      return device.gatt.connect();\r\n    })\r\n    .then(server => server.getPrimaryService('0000ffe0-0000-1000-8000-00805f9b34fb'))\r\n    .then(service => service.getCharacteristic('0000ffe1-0000-1000-8000-00805f9b34fb'))\r\n    .then(characteristic => {\r\n      log('Connected. Ready to send and receive data.');\r\n      setDataCharacteristic(characteristic);\r\n      characteristic.addEventListener('characteristicvaluechanged', handleCharacteristicValueChanged);\r\n      return characteristic.startNotifications();\r\n    })\r\n    .then(() => {\r\n      log('Notifications started');\r\n      //dataCharacteristic?.addEventListener('characteristicvaluechanged', handleCharacteristicValueChanged);\r\n    })\r\n    .catch(error => {\r\n      log('Error: ' + error);\r\n    });\r\n  };\r\n\r\n  const handleCharacteristicValueChanged = (event: Event) => {\r\n    const target = event.target as BluetoothRemoteGATTCharacteristic;\r\n    const value = target.value;\r\n    let decoder = new TextDecoder('utf-8');\r\n    let message = '';\r\n\r\n    for (let i = 0; i < value.byteLength; i++) {\r\n      message += String.fromCharCode(value.getUint8(i));\r\n    }\r\n\r\n    log('Received: ' + message);\r\n  };\r\n\r\n  const handleSendClick = () => {\r\n    let dataToSend = inputData + '\\r\\n';\r\n    const data = new TextEncoder().encode(dataToSend);\r\n\r\n    if (dataCharacteristic) {\r\n      const method = dataCharacteristic.properties.writeWithoutResponse ? 'writeValueWithoutResponse' : 'writeValue';\r\n\r\n      setTimeout(() => {\r\n        dataCharacteristic[method](data)\r\n        .then(() => {\r\n          log('Data sent: ' + dataToSend);\r\n        })\r\n        .catch(error => {\r\n          log('Send Error: ' + error);\r\n        });\r\n      }, 100);\r\n    } else {\r\n      log('Characteristic not found.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-2\" onClick={handleConnectClick}>Connect</button>\r\n      <input \r\n        type=\"text\" \r\n        className=\"border border-gray-400 p-2 rounded mb-2\" \r\n        value={inputData} \r\n        onChange={(e) => setInputData(e.target.value)} \r\n      />\r\n      <button className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\" onClick={handleSendClick}>Send Data</button>\r\n\r\n      <div className=\"mt-4 border border-gray-300 p-4 h-64 overflow-auto\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className=\"mb-2\">{msg}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BluetoothComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}